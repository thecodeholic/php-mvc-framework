<?php

// If no arguments were provided in the command line
if (!isset($argv[1])) {
    echo '!!! No command-line arguments were provided !!!' . PHP_EOL;
    return;
}

// Compare command-line arguments and execute their corresponding code
switch($argv[1]) {
    // For executing the command 'php codeholic serve'
    case 'serve':
        // Path to main 'index.php' file which is an entry point for our mvc app
        $pathToMainIndex = 'public/';

        // If PHP version is 8.0.0 or up, dynamically select a port to run PHP's built-in server on
        if (version_compare(phpversion(), '8.0.0') > -1) {
            exec('php -S 127.0.0.1:0 -t ' . $pathToMainIndex);
            return;
        }

        // If PHP version is less than 8.0.0, execute following code
        $port = 8080;  // Default port for PHP's built-in server
        $portLimit = 8100;
        $portIsFree = false;

        // Select a port that is free so that PHP's built-in server can be run on it
        while (!$portIsFree) {
            // If the PHP's built-in server can be run on the current port, stop the loop
            if (exec('php -S 127.0.0.1:' . $port . ' -t ' . $pathToMainIndex)) {
                $portIsFree = true;
                // Don't know which one is more useful here: 'continue' or 'break'
                continue;  // Thus, just using 'continue' here
                // break;
            }

            // Limit the iterations of the loop
            // We don't want this loop to run forever, if no port is free for use
            if ($port > $portLimit) {
                echo '!!! App failed to run. No port is free for the app to use !!!' . PHP_EOL;
                break;
            }

            $port++;
        }
        break;

    // If an invalid command-line argument is provided
    default:
        echo '!!! Invalid command line argument !!!';
        break;
}