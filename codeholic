<?php

// If no arguments were provided in the command line
if (!isset($argv[1])) {
    echo '!!! No command-line arguments were provided !!!' . PHP_EOL;
    return;
}

// Compare command-line arguments and execute their corresponding code
switch($argv[1]) {
    case 'serve': // For command 'php codeholic serve'
        $pathToMainIndex = 'public/';  // Path to the entry point of our app
        $host = '127.0.0.1';  // Default 'host' url for our app
        $port = 8080;  // Default port for our app to use

        // If default port is free, run PHP's built-in server on it
        if (exec(`php -S $host:$port -t $pathToMainIndex`)) {
            return;
        }

        // If PHP version is 8.0.0 or up, dynamically select a port to run PHP's built-in server on
        if (version_compare(phpversion(), '8.0.0') > -1) {
            exec(`php -S $host:0 -t $pathToMainIndex`);
            return;
        }

        // If PHP version is less than 8.0.0, execute following code
        $port++;  // Increment 'port number' as default port is not available for the use
        $portLimit = 8100;
        $portIsFree = false;

        // Select a port that is free so that PHP's built-in server can be run on it
        while (!$portIsFree) {
            // If the PHP's built-in server can be run on the current port, stop the loop
            if (exec(`php -S $host:$port -t $pathToMainIndex`)) {
                $portIsFree = true;
                break;
            }

            // Limited the iterations of the loop so that this loop does not run like forever if no port is available for use
            if ($port > $portLimit) {
                echo '!!! Failed to run the app. No ports are free for the use !!!' . PHP_EOL;
                break;
            }

            $port++;
        }
        break;

    // If an invalid command-line argument is provided
    default:
        echo '!!! Invalid command line argument: [' . $argv[1] . '] !!!' . PHP_EOL;
        break;
}